import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

BuildProperties defaultProperties = BuildProperties.load('/build-props/base.properties', project)
BuildProperties.generateFlavors(new File('build-props').listFiles(), project)

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        versionName defaultProperties.getString('versionName')
        minSdkVersion 19
        targetSdkVersion 22

        buildConfigField "String", "BUILD_TIME_FORMATTED", "\"${getBuildTimestamp()}\""
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        example {
            defaultProperties.configure(it)
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    apt 'com.google.dagger:dagger-compiler:2.0'

    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile project(':core')
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'io.reactivex:rxandroid:0.25.0'
    compile 'com.google.dagger:dagger:2.0.1'
    compile 'com.google.android.gms:play-services-maps:7.5.0'
}

def getBuildTimestamp() {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss 'UTC'");
    dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
    return dateFormat.format(new Date());
}
